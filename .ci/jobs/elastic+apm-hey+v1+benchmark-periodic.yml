---
- job:
    name: elastic+apm-hey+v1+benchmark-periodic
    display-name: elastic / hey-apm
    description: Unit tests and apm-server stress testing.
    project-type: matrix
    parameters:
    - string:
        name: branch_specifier
        default: refs/heads/v1
        description: the Git branch specifier to build (&lt;branchName&gt;, &lt;tagName&gt;,
          &lt;commitId&gt;, etc.)
    properties:
    - github:
        url: https://github.com/elastic/hey-apm/
    - inject:
        properties-content: HOME=${JENKINS_HOME}
    node: master
    scm:
    - git:
        name: origin
        credentials-id: f6c7695a-671e-4f4f-a331-acdce44ff9ba
        reference-repo: /var/lib/jenkins/.git-references/hey-apm.git
        branches:
        - ${branch_specifier}
        url: https://github.com/elastic/hey-apm.git
        basedir: src/github.com/elastic/hey-apm
        wipe-workspace: 'True'
    triggers:
    - timed: 0 23 * * *
    axes:
    - axis:
        type: slave
        name: label
        values:
        - metal
    vault:
      role_id: 35ad5918-eab7-c814-f8be-a305c811732e
    wrappers:
    - ansicolor
    - timeout:
        type: absolute
        timeout: 3600
        fail: true
    - timestamps
    builders:
    - shell: |-
        #!/usr/local/bin/runbld
        set -e
        export GOPATH=$WORKSPACE
        export PATH=$PATH:$GOPATH/bin
        eval "$(gvm 1.10.3)"
        echo "Installing hey-apm dependencies and running unit tests..."
        go get -v -u github.com/golang/dep/cmd/dep
        dep ensure -v
        SKIP_EXTERNAL=1 SKIP_STRESS=1 go test -v ./...
        echo "Fetching apm-server and installing latest go-licenser and mage..."
        APM_SERVER_DIR=$GOPATH/src/github.com/elastic/apm-server
        if [ ! -d "$APM_SERVER_DIR" ] ; then
        git clone git@github.com:elastic/apm-server.git "$APM_SERVER_DIR"
        else
        (cd "$APM_SERVER_DIR" && git pull git@github.com:elastic/apm-server.git)
        fi
        go get -v -u github.com/elastic/go-licenser
        go get -v -u github.com/magefile/mage
        (cd $GOPATH/src/github.com/magefile/mage && go run bootstrap.go)
        echo "Running apm-server stress tests..."
        set +x
        VAULT_TOKEN=$( curl -s -X POST -H "Content-Type: application/json" -L -d "{\"role_id\":\"$VAULT_ROLE_ID\",\"secret_id\":\"$VAULT_SECRET_ID\"}" $VAULT_ADDR/v1/auth/approle/login | jq -r '.auth.client_token' )
        CLOUD_DATA=$( curl -s -L -H "X-Vault-Token:$VAULT_TOKEN" $VAULT_ADDR/v1/secret/apm-team/ci/apm-server-benchmark-cloud )
        unset VAULT_TOKEN VAULT_SECRET_ID
        CLOUD_USERNAME=$( echo $CLOUD_DATA | jq '.data.user' | tr -d '"' )
        CLOUD_PASSWORD=$( echo $CLOUD_DATA | jq '.data.password' | tr -d '"' )
        CLOUD_ADDR=$( echo $CLOUD_DATA | jq '.data.url' | tr -d '"' )
        ELASTICSEARCH_URL=$CLOUD_ADDR ELASTICSEARCH_USR=$CLOUD_USERNAME ELASTICSEARCH_PWD=$CLOUD_PASSWORD go test -timeout 2h  -v github.com/elastic/hey-apm/server/client
        set -x
    publishers:
    - junit:
        results: '**/*-junit.xml'
        keep-long-stdio: true
        allow-empty-results: true
